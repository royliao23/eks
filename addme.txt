eks:

Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
choco install eksctl
eksctl version
 eksctl create cluster --name my-cluster 
 npm init
 npm install express --save
 deploy nodejs express to aws eks:
 node app.js
 docker build -t express-eks .
 docker run -p 3000:3000 -it --rm --name express-eks-run express-eks
 kubectl apply -f k8s.yaml
 kubectl get pod
  kubectl get svc
 kubectl config current-context
 aws eks list-clusters --region ap-southeast-2
 aws sts get-caller-identity
 .\deploywindow.ps1
docker rmi express-eks 

eksctl delete cluster --name my-cluster --region <your-aws-region>
eksctl get cluster --region <your-aws-region>
kubectl get nodes


ecs:

 npm init
 npm install express --save
 deploy nodejs express to aws ecs:
 node app.js
 docker build -t express-eks .
 docker run -p 3000:3000 -it --rm --name express-eks-run express-eks
 
  aws ec2 create-security-group --group-name ecs-nodejs-sg --description "ECS Node.js Security Group" --vpc-id vpc-066229078577dff3f --region ap-southeast-2 
   aws ec2 authorize-security-group-ingress --group-id sg-08f0d11729c4cf1c7 --protocol tcp --port 3000 --cidr 0.0.0.0/0 --region ap-southeast-2  
 aws elbv2 create-target-group --name nodejs-tg --protocol HTTP --port 80 --target-type ip --vpc-id vpc-066229078577dff3f --health-check-path / --region ap-southeast-2                   
 aws ecs register-task-definition --cli-input-json file://task-definition.json --region ap-southeast-2     
aws ecs create-cluster --cluster-name nodejs-app-cluster --region ap-southeast-2  
aws elbv2 create-load-balancer  --name nodejs-alb   --subnets subnet-071009d0cb0319bbf subnet-09dcf4f071eb69b1f   --security-groups sg-08f0d11729c4cf1c7   --region ap-southeast-2      
aws elbv2 describe-load-balancers --names nodejs-alb --region ap-southeast-2 --query "LoadBalancers[0].Listeners"   
aws elbv2 create-listener   --load-balancer-arn $(aws elbv2 describe-load-balancers --names nodejs-alb --region ap-southeast-2 --query "LoadBalancers[0].LoadBalancerArn" --output text)   --protocol HTTP   --port 80   --default-actions Type=forward,TargetGroupArn=$(aws elbv2 describe-target-groups --names nodejs-tg --region ap-southeast-2 --query "TargetGroups[0].TargetGroupArn" --output text)   --region ap-southeast-2 
aws ecs create-service  --cluster nodejs-app-cluster  --service-name ecs-service-new  --task-definition nodejs-app:1   --desired-count 1  --launch-type FARGATE   --network-configuration "awsvpcConfiguration={subnets=[subnet-071009d0cb0319bbf,subnet-09dcf4f071eb69b1f],securityGroups=[sg-08f0d11729c4cf1c7],assignPublicIp=ENABLED}"   --load-balancers "targetGroupArn=arn:aws:elasticloadbalancing:ap-southeast-2:324037283653:targetgroup/nodejs-tg/813b530a981a5386,containerName=nodejs-app,containerPort=3000"   --region ap-southeast-2
aws logs create-log-group   --log-group-name /ecs/nodejs-app   --region ap-southeast-2 
 aws logs describe-log-groups   --log-group-name-prefix /ecs/nodejs-app   --region ap-southeast-2
 aws ecs describe-task-definition   --task-definition nodejs-app:1   --region ap-southeast-2   --query "taskDefinition.executionRoleArn" 
 aws iam attach-role-policy   --role-name ecsTaskExecutionRole   --policy-arn arn:aws:iam::aws:policy/CloudWatchLogsFullAccess   --region ap-southeast-2 
  aws elbv2 describe-target-health  --target-group-arn arn:aws:elasticloadbalancing:ap-southeast-2:324037283653:targetgroup/nodejs-tg/813b530a981a5386  --region ap-southeast-2
  aws logs create-log-group   --log-group-name /ecs/nodejs-app   --region ap-southeast-2aws logs create-log-group   --log-group-name /ecs/nodejs-app   --region ap-southeast-2aws logs create-log-group   --log-group-name /ecs/nodejs-app   --region ap-southeast-2aws logs create-log-group   --log-group-name /ecs/nodejs-app   --region ap-southeast-2aws logs create-log-group   --log-group-name /ecs/nodejs-app   --region ap-southeast-2aws logs create-log-group   --log-group-name /ecs/nodejs-app   --region ap-southeast-2
 aws logs create-log-group   --log-group-name /ecs/nodejs-app   --region ap-southeast-2
 aws logs describe-log-groups   --log-group-name-prefix /ecs/nodejs-app   --region ap-southeast-2  
 aws ecs describe-task-definition   --task-definition nodejs-app:1   --region ap-southeast-2   --query "taskDefinition.executionRoleArn" 
aws iam attach-role-policy   --role-name ecsTaskExecutionRole   --policy-arn arn:aws:iam::aws:policy/CloudWatchLogsFullAccess   --region ap-southeast-2
aws ecs update-service `  --cluster nodejs-app-cluster `  --service ecs-service-new `  --force-new-deployment `  --region ap-southeast-2 
aws elbv2 describe-target-health `  --target-group-arn arn:aws:elasticloadbalancing:ap-southeast-2:324037283653:targetgroup/nodejs-tg/813b530a981a5386 `  --region ap-southeast-2
 . 'C:\Users\roy_y\codes\eks\deploywindowecs.ps1'